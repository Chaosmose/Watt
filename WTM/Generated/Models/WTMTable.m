// This file is part of "WTM"
// 
// "WTM" is free software: you can redistribute it and/or modify
// it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// "WTM" is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU LESSER GENERAL PUBLIC LICENSE for more details.
// 
// You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
// along with "WTM"  If not, see <http://www.gnu.org/licenses/>
// 
//  WTMTable.m
//  WTM
//
//  Generated by Flexions  
//  Copyright (c) 2013 Benoit Pereira da Silva All rights reserved.
 
#import "WTMTable.h" 
#import "WTMCollectionOfColumn.h"

@implementation WTMTable 

@synthesize columns=_columns;

- (void)setValue:(id)value forKey:(NSString *)key {
	if ([key isEqualToString:@"columns"]){
		[super setValue:[WTMCollectionOfColumn instanceFromDictionary:value inRegistry:_registry includeChildren:NO] forKey:@"columns"];
	} else {
		[super setValue:value forKey:key];
	}
}

- (WTMCollectionOfColumn*)columns{
	if([_columns isAnAlias]){
		id o=[_registry objectWithUinstID:_columns.uinstID];
		if(o){
			_columns=o;
		}
	}
	return _columns;
}


- (WTMCollectionOfColumn*)columns_auto{
	_columns=[self columns];
	if(!_columns){
		_columns=[[WTMCollectionOfColumn alloc] initInRegistry:_registry];
	}
	return _columns;
}

- (void)setColumns:(WTMCollectionOfColumn*)columns{
	_columns=columns;
}


- (NSDictionary *)dictionaryRepresentationWithChildren:(BOOL)includeChildren{
	NSMutableDictionary *wrapper = [NSMutableDictionary dictionary];
	[wrapper setObject:NSStringFromClass([self class]) forKey:__className__];
    [wrapper setObject:[self dictionaryOfPropertiesWithChildren:includeChildren] forKey:__properties__];
    [wrapper setObject:[NSNumber numberWithInteger:self.uinstID] forKey:__uinstID__];
    return wrapper;
}

- (NSMutableDictionary*)dictionaryOfPropertiesWithChildren:(BOOL)includeChildren{
    NSMutableDictionary *dictionary=[super dictionaryOfPropertiesWithChildren:includeChildren];
	if(self.columns){
		if(includeChildren){
			[dictionary setValue:[self.columns dictionaryRepresentationWithChildren:includeChildren] forKey:@"columns"];
		}else{
			[dictionary setValue:[self.columns aliasDictionaryRepresentation] forKey:@"columns"];
		}
	}
    return dictionary;
}


- (NSString*)description{
    if([self isAnAlias])
        return [super aliasDescription];
    NSMutableString *s=[NSMutableString stringWithString:[super description]];
	[s appendFormat:@"Instance of %@ (%i) :\n",@"WTMTable ",self.uinstID];
	[s appendFormat:@"columns : %@\n",NSStringFromClass([self.columns class])];
	return s;
}

@end
