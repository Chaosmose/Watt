// This file is part of "Watt-Multimedia-Engine"
// 
// "Watt-Multimedia-Engine" is free software: you can redistribute it and/or modify
// it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// "Watt-Multimedia-Engine" is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU LESSER GENERAL PUBLIC LICENSE for more details.
// 
// You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
// along with "Watt-Multimedia-Engine"  If not, see <http://www.gnu.org/licenses/>
// 
//  WTMElement.m
//  Watt-Multimedia-Engine
//
//  Generated by Flexions  
//  Copyright (c) 2013 Benoit Pereira da Silva All rights reserved.
 
#import "WTMElement.h" 
#import "WTMCollectionOfDatum.h"

@implementation WTMElement 

+ (WTMElement*)instanceFromDictionary:(NSDictionary *)aDictionary{
	WTMElement*instance = [[WTMElement alloc] init];
	[instance setAttributesFromDictionary:aDictionary];
	return instance;
}

- (void)setAttributesFromDictionary:(NSDictionary *)aDictionary{
	if (![aDictionary isKindOfClass:[NSDictionary class]]) {
		return;
	}
	[self setValuesForKeysWithDictionary:aDictionary];
}

- (void)setValue:(id)value forKey:(NSString *)key {
	if ([key isEqualToString:@"assetLibUID"]){
		[super setValue:value forKey:@"assetLibUID"];
	} else if ([key isEqualToString:@"assetMemberIndex"]) {
		[super setValue:value forKey:@"assetMemberIndex"];
	} else if ([key isEqualToString:@"behaviorLibUID"]) {
		[super setValue:value forKey:@"behaviorLibUID"];
	} else if ([key isEqualToString:@"behaviorMemberIndex"]) {
		[super setValue:value forKey:@"behaviorMemberIndex"];
	} else if ([key isEqualToString:@"pageIndex"]) {
		[super setValue:value forKey:@"pageIndex"];
	} else if ([key isEqualToString:@"rect"]) {
		[super setValue:value forKey:@"rect"];
	} else if ([key isEqualToString:@"context"]) {
		[super setValue:[WTMCollectionOfDatum instanceFromDictionary:value] forKey:@"context"];
	} else {
		[super setValue:value forUndefinedKey:key];
	}
}

- (NSDictionary*)dictionaryRepresentation{
	NSMutableDictionary *dictionary = [NSMutableDictionary dictionary];
	[dictionary setValue:self.assetLibUID forKey:@"assetLibUID"];
	[dictionary setValue:[NSNumber numberWithInteger:self.assetMemberIndex] forKey:@"assetMemberIndex"];
	[dictionary setValue:self.behaviorLibUID forKey:@"behaviorLibUID"];
	[dictionary setValue:[NSNumber numberWithInteger:self.behaviorMemberIndex] forKey:@"behaviorMemberIndex"];
	[dictionary setValue:[NSNumber numberWithInteger:self.pageIndex] forKey:@"pageIndex"];
	[dictionary setValue:[NSValue valueWithCGRect:self.rect] forKey:@"rect"];
	[dictionary setValue:[self.context dictionaryRepresentation] forKey:@"context"];
	return dictionary;
}

-(NSString*)description{
	NSMutableString *s=[NSMutableString string];
	[s appendFormat:@"assetLibUID : %@",self.assetLibUID];
	[s appendFormat:@"assetMemberIndex : %@",[NSNumber numberWithInteger:self.assetMemberIndex]];
	[s appendFormat:@"behaviorLibUID : %@",self.behaviorLibUID];
	[s appendFormat:@"behaviorMemberIndex : %@",[NSNumber numberWithInteger:self.behaviorMemberIndex]];
	[s appendFormat:@"pageIndex : %@",[NSNumber numberWithInteger:self.pageIndex]];
	[s appendFormat:@"rect : %@",[NSValue valueWithCGRect:self.rect]];
	[s appendFormat:@"context : %@",self.context];
	return s;
}

@end
