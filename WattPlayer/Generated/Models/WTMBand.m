// This file is part of "Watt"
// 
// "Watt" is free software: you can redistribute it and/or modify
// it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// "Watt" is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU LESSER GENERAL PUBLIC LICENSE for more details.
// 
// You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
// along with "Watt"  If not, see <http://www.gnu.org/licenses/>
// 
//  WTMBand.m
//  Watt
//
//  Generated by Flexions  
//  Copyright (c) 2013 Benoit Pereira da Silva All rights reserved.
 
#import "WTMBand.h" 
#import "WTMLibrary.h"
#import "WTMCollectionOfMember.h"

@implementation WTMBand 

@synthesize category=_category;
@synthesize name=_name;
@synthesize library=_library;
@synthesize members=_members;

- (void)setValue:(id)value forKey:(NSString *)key {
	if ([key isEqualToString:@"category"]){
		[super setValue:value forKey:@"category"];
	} else if ([key isEqualToString:@"name"]) {
		[super setValue:value forKey:@"name"];
	} else if ([key isEqualToString:@"library"]) {
		[super setValue:[WTMLibrary instanceFromDictionary:value inRegistry:_registry includeChildren:NO] forKey:@"library"];
	} else if ([key isEqualToString:@"members"]) {
		[super setValue:[WTMCollectionOfMember instanceFromDictionary:value inRegistry:_registry includeChildren:NO] forKey:@"members"];
	} else {
		[super setValue:value forKey:key];
	}
}

- (WTMLibrary*)library{
	if([_library isAnAlias]){
		id o=[_registry objectWithUinstID:_library.uinstID];
		if(o){
			_library=o;
		}
	}
	return _library;
}


- (WTMLibrary*)library_auto{
	_library=[self library];
	if(!_library){
		_library=[[WTMLibrary alloc] initInRegistry:_registry];
	}
	return _library;
}

- (void)setLibrary:(WTMLibrary*)library{
	_library=library;
}

- (WTMCollectionOfMember*)members{
	if([_members isAnAlias]){
		id o=[_registry objectWithUinstID:_members.uinstID];
		if(o){
			_members=o;
		}
	}
	return _members;
}


- (WTMCollectionOfMember*)members_auto{
	_members=[self members];
	if(!_members){
		_members=[[WTMCollectionOfMember alloc] initInRegistry:_registry];
	}
	return _members;
}

- (void)setMembers:(WTMCollectionOfMember*)members{
	_members=members;
}


- (NSDictionary *)dictionaryRepresentationWithChildren:(BOOL)includeChildren{
	NSMutableDictionary *wrapper = [NSMutableDictionary dictionary];
	[wrapper setObject:NSStringFromClass([self class]) forKey:__className__];
    [wrapper setObject:[self dictionaryOfPropertiesWithChildren:includeChildren] forKey:__properties__];
    [wrapper setObject:[NSNumber numberWithInteger:self.uinstID] forKey:__uinstID__];
    return wrapper;
}

- (NSMutableDictionary*)dictionaryOfPropertiesWithChildren:(BOOL)includeChildren{
    NSMutableDictionary *dictionary=[super dictionaryOfPropertiesWithChildren:includeChildren];
	[dictionary setValue:self.category forKey:@"category"];
	[dictionary setValue:self.name forKey:@"name"];
	if(self.library){
		if(includeChildren){
			[dictionary setValue:[self.library dictionaryRepresentationWithChildren:includeChildren] forKey:@"library"];
		}else{
			[dictionary setValue:[self.library aliasDictionaryRepresentation] forKey:@"library"];
		}
	}
	if(self.members){
		if(includeChildren){
			[dictionary setValue:[self.members dictionaryRepresentationWithChildren:includeChildren] forKey:@"members"];
		}else{
			[dictionary setValue:[self.members aliasDictionaryRepresentation] forKey:@"members"];
		}
	}
    return dictionary;
}


- (NSString*)description{
    if([self isAnAlias])
        return [super aliasDescription];
	NSMutableString *s=[NSMutableString string];
	[s appendFormat:@"Instance of %@ (%i) :\n",NSStringFromClass([self class]),self.uinstID];
	[s appendFormat:@"category : %@\n",self.category];
	[s appendFormat:@"name : %@\n",self.name];
	[s appendFormat:@"library : %@\n",NSStringFromClass([self.library class])];
	[s appendFormat:@"members : %@\n",NSStringFromClass([self.members class])];
	return s;
}

@end
