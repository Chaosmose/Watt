// This file is part of "Watt-Multimedia-Engine"
// 
// "Watt-Multimedia-Engine" is free software: you can redistribute it and/or modify
// it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// "Watt-Multimedia-Engine" is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU LESSER GENERAL PUBLIC LICENSE for more details.
// 
// You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
// along with "Watt-Multimedia-Engine"  If not, see <http://www.gnu.org/licenses/>
// 
//  WTMShelf.m
//  Watt-Multimedia-Engine
//
//  Generated by Flexions  
//  Copyright (c) 2013 Benoit Pereira da Silva All rights reserved.
 
#import "WTMShelf.h" 
#import "WTMCollectionOfUser.h"
#import "WTMCollectionOfPackage.h"

@implementation WTMShelf 

+ (WTMShelf*)instanceFromDictionary:(NSDictionary *)aDictionary{
	WTMShelf*instance = [[WTMShelf alloc] init];
	[instance setAttributesFromDictionary:aDictionary];
	return instance;
}

- (void)setAttributesFromDictionary:(NSDictionary *)aDictionary{
	if (![aDictionary isKindOfClass:[NSDictionary class]]) {
		return;
	}
	[self setValuesForKeysWithDictionary:aDictionary];
}

- (void)setValue:(id)value forKey:(NSString *)key {
	if ([key isEqualToString:@"comment"]){
		[super setValue:value forKey:@"comment"];
	} else if ([key isEqualToString:@"localUsers"]) {
		[super setValue:[WTMCollectionOfUser instanceFromDictionary:value] forKey:@"localUsers"];
	} else if ([key isEqualToString:@"packages"]) {
		[super setValue:[WTMCollectionOfPackage instanceFromDictionary:value] forKey:@"packages"];
	} else {
		[super setValue:value forUndefinedKey:key];
	}
}

- (NSDictionary*)dictionaryRepresentation{
	NSMutableDictionary *dictionary = [NSMutableDictionary dictionary];
	[dictionary setValue:self.comment forKey:@"comment"];
	[dictionary setValue:[self.localUsers dictionaryRepresentation] forKey:@"localUsers"];
	[dictionary setValue:[self.packages dictionaryRepresentation] forKey:@"packages"];
	return dictionary;
}

-(NSString*)description{
	NSMutableString *s=[NSMutableString string];
	[s appendFormat:@"comment : %@",self.comment];
	[s appendFormat:@"localUsers : %@",self.localUsers];
	[s appendFormat:@"packages : %@",self.packages];
	return s;
}

@end
