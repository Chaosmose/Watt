// This file is part of "Watt"
// 
// "Watt" is free software: you can redistribute it and/or modify
// it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// "Watt" is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU LESSER GENERAL PUBLIC LICENSE for more details.
// 
// You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
// along with "Watt"  If not, see <http://www.gnu.org/licenses/>
// 
//  WTMPackage.m
//  Watt
//
//  Generated by Flexions  
//  Copyright (c) 2013 Benoit Pereira da Silva All rights reserved.
 
#import "WTMPackage.h" 
#import "WTMCollectionOfActivity.h"
#import "WTMCollectionOfLangDictionary.h"
#import "WTMCollectionOfLibrary.h"
#import "WTMCollectionOfUser.h"

@implementation WTMPackage 

@synthesize comment=_comment;
@synthesize license=_license;
@synthesize minEngineVersion=_minEngineVersion;
@synthesize name=_name;
@synthesize ownerUserUID=_ownerUserUID;
@synthesize rights=_rights;
@synthesize shelfIndex=_shelfIndex;
@synthesize uid=_uid;
@synthesize activities=_activities;
@synthesize langDictionaries=_langDictionaries;
@synthesize libraries=_libraries;
@synthesize rightsAssignees=_rightsAssignees;

- (void)setValue:(id)value forKey:(NSString *)key {
	if ([key isEqualToString:@"comment"]){
		[super setValue:value forKey:@"comment"];
	} else if ([key isEqualToString:@"license"]) {
		[super setValue:value forKey:@"license"];
	} else if ([key isEqualToString:@"minEngineVersion"]) {
		[super setValue:value forKey:@"minEngineVersion"];
	} else if ([key isEqualToString:@"name"]) {
		[super setValue:value forKey:@"name"];
	} else if ([key isEqualToString:@"ownerUserUID"]) {
		[super setValue:value forKey:@"ownerUserUID"];
	} else if ([key isEqualToString:@"rights"]) {
		[super setValue:value forKey:@"rights"];
	} else if ([key isEqualToString:@"shelfIndex"]) {
		[super setValue:value forKey:@"shelfIndex"];
	} else if ([key isEqualToString:@"uid"]) {
		[super setValue:value forKey:@"uid"];
	} else if ([key isEqualToString:@"activities"]) {
		[super setValue:[WTMCollectionOfActivity instanceFromDictionary:value inRegistry:_registry includeChildren:NO] forKey:@"activities"];
	} else if ([key isEqualToString:@"langDictionaries"]) {
		[super setValue:[WTMCollectionOfLangDictionary instanceFromDictionary:value inRegistry:_registry includeChildren:NO] forKey:@"langDictionaries"];
	} else if ([key isEqualToString:@"libraries"]) {
		[super setValue:[WTMCollectionOfLibrary instanceFromDictionary:value inRegistry:_registry includeChildren:NO] forKey:@"libraries"];
	} else if ([key isEqualToString:@"rightsAssignees"]) {
		[super setValue:[WTMCollectionOfUser instanceFromDictionary:value inRegistry:_registry includeChildren:NO] forKey:@"rightsAssignees"];
	} else {
		[super setValue:value forKey:key];
	}
}


- (WTMCollectionOfActivity*)activities{
	if([_activities isAnAlias]){
		id o=[_registry objectWithUinstID:_activities.uinstID];
		if(o){
			_activities=o;
		}
	}
	return _activities;
}


- (WTMCollectionOfActivity*)activities_auto{
	_activities=[self activities];
	if(!_activities){
		_activities=[[WTMCollectionOfActivity alloc] initInRegistry:_registry];
	}
	return _activities;
}

- (void)setActivities:(WTMCollectionOfActivity*)activities{
	_activities=activities;
}

- (WTMCollectionOfLangDictionary*)langDictionaries{
	if([_langDictionaries isAnAlias]){
		id o=[_registry objectWithUinstID:_langDictionaries.uinstID];
		if(o){
			_langDictionaries=o;
		}
	}
	return _langDictionaries;
}


- (WTMCollectionOfLangDictionary*)langDictionaries_auto{
	_langDictionaries=[self langDictionaries];
	if(!_langDictionaries){
		_langDictionaries=[[WTMCollectionOfLangDictionary alloc] initInRegistry:_registry];
	}
	return _langDictionaries;
}

- (void)setLangDictionaries:(WTMCollectionOfLangDictionary*)langDictionaries{
	_langDictionaries=langDictionaries;
}

- (WTMCollectionOfLibrary*)libraries{
	if([_libraries isAnAlias]){
		id o=[_registry objectWithUinstID:_libraries.uinstID];
		if(o){
			_libraries=o;
		}
	}
	return _libraries;
}


- (WTMCollectionOfLibrary*)libraries_auto{
	_libraries=[self libraries];
	if(!_libraries){
		_libraries=[[WTMCollectionOfLibrary alloc] initInRegistry:_registry];
	}
	return _libraries;
}

- (void)setLibraries:(WTMCollectionOfLibrary*)libraries{
	_libraries=libraries;
}

- (WTMCollectionOfUser*)rightsAssignees{
	if([_rightsAssignees isAnAlias]){
		id o=[_registry objectWithUinstID:_rightsAssignees.uinstID];
		if(o){
			_rightsAssignees=o;
		}
	}
	return _rightsAssignees;
}


- (WTMCollectionOfUser*)rightsAssignees_auto{
	_rightsAssignees=[self rightsAssignees];
	if(!_rightsAssignees){
		_rightsAssignees=[[WTMCollectionOfUser alloc] initInRegistry:_registry];
	}
	return _rightsAssignees;
}

- (void)setRightsAssignees:(WTMCollectionOfUser*)rightsAssignees{
	_rightsAssignees=rightsAssignees;
}



- (NSDictionary *)dictionaryRepresentationWithChildren:(BOOL)includeChildren{
    if([self isAnAlias])
        return [super aliasDictionaryRepresentation];
	NSMutableDictionary *wrapper = [NSMutableDictionary dictionary];
    NSMutableDictionary *dictionary=[NSMutableDictionary dictionary];
	[dictionary setValue:self.comment forKey:@"comment"];
	[dictionary setValue:self.license forKey:@"license"];
	[dictionary setValue:[NSNumber numberWithFloat:self.minEngineVersion] forKey:@"minEngineVersion"];
	[dictionary setValue:self.name forKey:@"name"];
	[dictionary setValue:self.ownerUserUID forKey:@"ownerUserUID"];
	[dictionary setValue:self.rights forKey:@"rights"];
	[dictionary setValue:[NSNumber numberWithInteger:self.shelfIndex] forKey:@"shelfIndex"];
	[dictionary setValue:self.uid forKey:@"uid"];
	if(self.activities){
		if(includeChildren){
			[dictionary setValue:[self.activities dictionaryRepresentationWithChildren:includeChildren] forKey:@"activities"];
		}else{
			[dictionary setValue:[self.activities aliasDictionaryRepresentation] forKey:@"activities"];
		}
	}
	if(self.langDictionaries){
		if(includeChildren){
			[dictionary setValue:[self.langDictionaries dictionaryRepresentationWithChildren:includeChildren] forKey:@"langDictionaries"];
		}else{
			[dictionary setValue:[self.langDictionaries aliasDictionaryRepresentation] forKey:@"langDictionaries"];
		}
	}
	if(self.libraries){
		if(includeChildren){
			[dictionary setValue:[self.libraries dictionaryRepresentationWithChildren:includeChildren] forKey:@"libraries"];
		}else{
			[dictionary setValue:[self.libraries aliasDictionaryRepresentation] forKey:@"libraries"];
		}
	}
	if(self.rightsAssignees){
		if(includeChildren){
			[dictionary setValue:[self.rightsAssignees dictionaryRepresentationWithChildren:includeChildren] forKey:@"rightsAssignees"];
		}else{
			[dictionary setValue:[self.rightsAssignees aliasDictionaryRepresentation] forKey:@"rightsAssignees"];
		}
	}
	[wrapper setObject:NSStringFromClass([self class]) forKey:__className__];
    [wrapper setObject:dictionary forKey:__properties__];
    [wrapper setObject:[NSNumber numberWithInteger:self.uinstID] forKey:__uinstID__];
    return wrapper;
}


- (NSString*)description{
    if([self isAnAlias])
        return [super aliasDescription];
	NSMutableString *s=[NSMutableString string];
	[s appendFormat:@"Instance of %@ :\n",NSStringFromClass([self class])];
	[s appendFormat:@"comment : %@\n",self.comment];
	[s appendFormat:@"license : %@\n",self.license];
	[s appendFormat:@"minEngineVersion : %@\n",[NSNumber numberWithFloat:self.minEngineVersion]];
	[s appendFormat:@"name : %@\n",self.name];
	[s appendFormat:@"ownerUserUID : %@\n",self.ownerUserUID];
	[s appendFormat:@"rights : %@\n",self.rights];
	[s appendFormat:@"shelfIndex : %@\n",[NSNumber numberWithInteger:self.shelfIndex]];
	[s appendFormat:@"uid : %@\n",self.uid];
	[s appendFormat:@"activities : %@\n",NSStringFromClass([self.activities class])];
	[s appendFormat:@"langDictionaries : %@\n",NSStringFromClass([self.langDictionaries class])];
	[s appendFormat:@"libraries : %@\n",NSStringFromClass([self.libraries class])];
	[s appendFormat:@"rightsAssignees : %@\n",NSStringFromClass([self.rightsAssignees class])];
	return s;
}

@end
